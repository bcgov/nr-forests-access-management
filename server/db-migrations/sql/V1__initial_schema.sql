--
-- ER/Studio Data Architect SQL Code Generation
-- Company :      CGI
-- Project :      FAM_Model.DM1
-- Author :       Conrad Gustafson / Richard Pardo-Figueroa
--
-- Date Created : Friday, July 08, 2022 15:58:06
-- Target DBMS : PostgreSQL 10.x-12.x
--


-- 
-- SCHEMA: APP_FAM 
--

CREATE SCHEMA IF NOT EXISTS app_fam;

-- 
-- USER: FAM_PROXY_API 
--

CREATE USER fam_proxy_api;

GRANT SELECT, UPDATE, DELETE, INSERT ON ALL TABLES IN SCHEMA app_fam TO fam_proxy_api;

-- 
-- TABLE: app_fam.fam_application 
--

CREATE TABLE app_fam.fam_application(
    application_id             bigint          GENERATED BY DEFAULT AS IDENTITY (START WITH 1 INCREMENT BY 1),
    application_name           varchar(100)    NOT NULL,
    application_description    varchar(200)    NOT NULL,
    application_client_id      bigint,
    create_user                varchar(30)     NOT NULL,
    create_date                timestamp(6)    DEFAULT CURRENT_DATE NOT NULL,
    update_user                varchar(30),
    update_date                timestamp(6)    DEFAULT CURRENT_DATE
)
;



COMMENT ON COLUMN app_fam.fam_application.application_id IS 'Automatically generated key used to identify the uniqueness of an Application registered under FAM'
;
COMMENT ON COLUMN app_fam.fam_application.application_client_id IS 'Automatically generated key used to identify the uniqueness of an OIDC as it corresponds to an identified client '
;
COMMENT ON COLUMN app_fam.fam_application.create_user IS 'The user or proxy account that created the record.'
;
COMMENT ON COLUMN app_fam.fam_application.create_date IS 'The date and time the record was created.'
;
COMMENT ON COLUMN app_fam.fam_application.update_user IS 'The user or proxy account that created or last updated the record. '
;
COMMENT ON COLUMN app_fam.fam_application.update_date IS 'The date and time the record was created or last updated.'
;
COMMENT ON TABLE app_fam.fam_application IS 'An application is a digital product that fulfills a specific user goal. It can be a front-end application, a back-end API, a combination of these, or something else entirely.'
;

-- 
-- TABLE: app_fam.fam_application_client 
--

CREATE TABLE app_fam.fam_application_client(
    application_client_id    bigint          GENERATED ALWAYS AS IDENTITY (START WITH 1 INCREMENT BY 1),
    cognito_client_id        varchar(32)     NOT NULL,
    create_user              varchar(30)     NOT NULL,
    create_date              timestamp(6)    DEFAULT CURRENT_DATE NOT NULL,
    update_user              varchar(30),
    update_date              varchar(9)      DEFAULT CURRENT_DATE
)
;



COMMENT ON COLUMN app_fam.fam_application_client.application_client_id IS 'Automatically generated key used to identify the uniqueness of an OIDC as it corresponds to an identified client '
;
COMMENT ON COLUMN app_fam.fam_application_client.create_user IS 'The user or proxy account that created the record.'
;
COMMENT ON COLUMN app_fam.fam_application_client.create_date IS 'The date and time the record was created.'
;
COMMENT ON COLUMN app_fam.fam_application_client.update_user IS 'The user or proxy account that created or last updated the record. '
;
COMMENT ON COLUMN app_fam.fam_application_client.update_date IS 'ZIP code.'
;
COMMENT ON TABLE app_fam.fam_application_client IS 'FAM needs to know the OIDC client ID in order to match to an application. The relationship between OIDC client and application is many-to-one because sometimes there is more than one OIDC client for an application and it is convenient to be able to configure the authorization once (at the application level) and re-use it (at the OIDC level).'
;

-- 
-- TABLE: app_fam.fam_application_group_xref 
--

CREATE TABLE app_fam.fam_application_group_xref(
    application_id    bigint          NOT NULL,
    group_id          bigint          NOT NULL,
    create_user       varchar(30)     NOT NULL,
    create_date       timestamp(6)    DEFAULT CURRENT_DATE NOT NULL,
    update_user       varchar(30),
    update_date       timestamp(6)    DEFAULT CURRENT_DATE
)
;



COMMENT ON COLUMN app_fam.fam_application_group_xref.create_user IS 'The user or proxy account that created the record.'
;
COMMENT ON COLUMN app_fam.fam_application_group_xref.create_date IS 'The date and time the record was created.'
;
COMMENT ON COLUMN app_fam.fam_application_group_xref.update_user IS 'The user or proxy account that created or last updated the record. '
;
COMMENT ON COLUMN app_fam.fam_application_group_xref.update_date IS 'The date and time the record was created or last updated.'
;

-- 
-- TABLE: app_fam.fam_forest_client 
--

CREATE TABLE app_fam.fam_forest_client(
    client_number_id    bigint          GENERATED ALWAYS AS IDENTITY (START WITH 1 INCREMENT BY 1),
    client_name         varchar(100)    NOT NULL,
    create_user         varchar(30)     NOT NULL,
    create_date         timestamp(6)    DEFAULT CURRENT_DATE NOT NULL,
    update_user         varchar(30),
    update_date         timestamp(6)    DEFAULT CURRENT_DATE
)
;



COMMENT ON COLUMN app_fam.fam_forest_client.client_number_id IS 'Sequentially assigned number to identify a ministry client.'
;
COMMENT ON COLUMN app_fam.fam_forest_client.create_user IS 'The user or proxy account that created the record.'
;
COMMENT ON COLUMN app_fam.fam_forest_client.create_date IS 'The date and time the record was created.'
;
COMMENT ON COLUMN app_fam.fam_forest_client.update_user IS 'The user or proxy account that created or last updated the record. '
;
COMMENT ON COLUMN app_fam.fam_forest_client.update_date IS 'The date and time the record was created or last updated.'
;
COMMENT ON TABLE app_fam.fam_forest_client IS 'A forest client is a business, individual, or agency that is identified as an entity that a user can have a privilege "on behalf of".'
;

-- 
-- TABLE: app_fam.fam_group 
--

CREATE TABLE app_fam.fam_group(
    group_id            bigint          GENERATED ALWAYS AS IDENTITY (START WITH 1 INCREMENT BY 1),
    name                varchar(100)    NOT NULL,
    purpose             varchar(200)    NOT NULL,
    parent_group_id     bigint,
    client_number_id    bigint,
    create_user         varchar(30)     NOT NULL,
    create_date         timestamp(6)    DEFAULT CURRENT_DATE NOT NULL,
    update_user         varchar(30),
    update_date         timestamp(6)    DEFAULT CURRENT_DATE
)
;



COMMENT ON COLUMN app_fam.fam_group.client_number_id IS 'Sequentially assigned number to identify a ministry client.'
;
COMMENT ON COLUMN app_fam.fam_group.create_user IS 'The user or proxy account that created the record.'
;
COMMENT ON COLUMN app_fam.fam_group.create_date IS 'The date and time the record was created.'
;
COMMENT ON COLUMN app_fam.fam_group.update_user IS 'The user or proxy account that created or last updated the record. '
;
COMMENT ON COLUMN app_fam.fam_group.update_date IS 'The date and time the record was created or last updated.'
;
COMMENT ON TABLE app_fam.fam_group IS 'A group is a collection of roles. When a group is assigned to a user, the user indirectly assumes the privileges of all the roles encompassed by the group. Groups are used to define profiles in order to make it easier to manage common sets of roles for users. A group can contain roles from multiple applications in order to handle the case where users typically have a certain set of privileges across multiple applications.'
;

-- 
-- TABLE: app_fam.fam_group_role_xref 
--

CREATE TABLE app_fam.fam_group_role_xref(
    group_id       bigint          NOT NULL,
    role_id        bigint          NOT NULL,
    create_user    varchar(30)     NOT NULL,
    create_date    timestamp(6)    DEFAULT CURRENT_DATE NOT NULL,
    update_user    varchar(30),
    update_date    timestamp(6)    DEFAULT CURRENT_DATE
)
;



COMMENT ON COLUMN app_fam.fam_group_role_xref.role_id IS 'Automatically generated key used to identify the uniqueness of a Role within the FAM Application'
;
COMMENT ON COLUMN app_fam.fam_group_role_xref.create_user IS 'The user or proxy account that created the record.'
;
COMMENT ON COLUMN app_fam.fam_group_role_xref.create_date IS 'The date and time the record was created.'
;
COMMENT ON COLUMN app_fam.fam_group_role_xref.update_user IS 'The user or proxy account that created or last updated the record. '
;
COMMENT ON COLUMN app_fam.fam_group_role_xref.update_date IS 'The date and time the record was created or last updated.'
;

-- 
-- TABLE: app_fam.fam_role 
--

CREATE TABLE app_fam.fam_role(
    role_id             bigint          GENERATED ALWAYS AS IDENTITY (START WITH 1 INCREMENT BY 1),
    role_name           varchar(100)    NOT NULL,
    role_purpose        varchar(200)    NOT NULL,
    parent_role_id      bigint,
    application_id      bigint          NOT NULL,
    client_number_id    bigint          NOT NULL,
    create_user         varchar(30)     NOT NULL,
    create_date         timestamp(6)    DEFAULT CURRENT_DATE NOT NULL,
    update_user         varchar(30),
    update_date         timestamp(6)    DEFAULT CURRENT_DATE
)
;



COMMENT ON COLUMN app_fam.fam_role.role_id IS 'Automatically generated key used to identify the uniqueness of a Role within the FAM Application'
;
COMMENT ON COLUMN app_fam.fam_role.parent_role_id IS 'Automatically generated key used to identify the uniqueness of a Role within the FAM Application'
;
COMMENT ON COLUMN app_fam.fam_role.client_number_id IS 'Sequentially assigned number to identify a ministry client.'
;
COMMENT ON COLUMN app_fam.fam_role.create_user IS 'The user or proxy account that created the record.'
;
COMMENT ON COLUMN app_fam.fam_role.create_date IS 'The date and time the record was created.'
;
COMMENT ON COLUMN app_fam.fam_role.update_user IS 'The user or proxy account that created or last updated the record. '
;
COMMENT ON COLUMN app_fam.fam_role.update_date IS 'The date and time the record was created or last updated.'
;
COMMENT ON TABLE app_fam.fam_role IS 'A role is a qualifier that can be assigned to a user in order to identify a privilege within the context of an application.'
;

-- 
-- TABLE: app_fam.fam_user 
--

CREATE TABLE app_fam.fam_user(
    user_id            bigint          GENERATED ALWAYS AS IDENTITY (START WITH 1 INCREMENT BY 1),
    user_type          varchar(1)      NOT NULL,
    cognito_user_id    varchar(32),
    user_name          varchar(100)    NOT NULL,
    user_guid          varchar(32)     NOT NULL,
    create_user        varchar(30)     NOT NULL,
    create_date        timestamp(6)    DEFAULT CURRENT_DATE NOT NULL,
    update_user        varchar(30),
    update_date        timestamp(6)    DEFAULT CURRENT_DATE
)
;



COMMENT ON COLUMN app_fam.fam_user.user_id IS 'Automatically generated key used to identify the uniqueness of a User within the FAM Application'
;
COMMENT ON COLUMN app_fam.fam_user.create_user IS 'The user or proxy account that created the record.'
;
COMMENT ON COLUMN app_fam.fam_user.create_date IS 'The date and time the record was created.'
;
COMMENT ON COLUMN app_fam.fam_user.update_user IS 'The user or proxy account that created or last updated the record. '
;
COMMENT ON COLUMN app_fam.fam_user.update_date IS 'The date and time the record was created or last updated.'
;
COMMENT ON TABLE app_fam.fam_user IS 'A user is a person or system that can authenticate and then interact with an application.'
;

-- 
-- TABLE: app_fam.fam_user_group_xref 
--

CREATE TABLE app_fam.fam_user_group_xref(
    user_id        bigint          NOT NULL,
    group_id       bigint          NOT NULL,
    create_user    varchar(30)     NOT NULL,
    create_date    timestamp(6)    DEFAULT CURRENT_DATE NOT NULL,
    update_user    varchar(30),
    update_date    timestamp(6)    DEFAULT CURRENT_DATE
)
;



COMMENT ON COLUMN app_fam.fam_user_group_xref.user_id IS 'Automatically generated key used to identify the uniqueness of a User within the FAM Application'
;
COMMENT ON COLUMN app_fam.fam_user_group_xref.create_user IS 'The user or proxy account that created the record.'
;
COMMENT ON COLUMN app_fam.fam_user_group_xref.create_date IS 'The date and time the record was created.'
;
COMMENT ON COLUMN app_fam.fam_user_group_xref.update_user IS 'The user or proxy account that created or last updated the record. '
;
COMMENT ON COLUMN app_fam.fam_user_group_xref.update_date IS 'The date and time the record was created or last updated.'
;
COMMENT ON TABLE app_fam.fam_user_group_xref IS 'User Group Xref is a cross-reference object that allows for the identification of Groups assigned to a user, as well as the users that belong to a given Group'
;

-- 
-- TABLE: app_fam.fam_user_role_xref 
--

CREATE TABLE app_fam.fam_user_role_xref(
    user_id        bigint          NOT NULL,
    role_id        bigint          NOT NULL,
    create_user    varchar(30)     NOT NULL,
    create_date    timestamp(6)    DEFAULT CURRENT_DATE NOT NULL,
    update_user    varchar(30),
    update_date    timestamp(6)    DEFAULT CURRENT_DATE
)
;



COMMENT ON COLUMN app_fam.fam_user_role_xref.user_id IS 'Automatically generated key used to identify the uniqueness of a User within the FAM Application'
;
COMMENT ON COLUMN app_fam.fam_user_role_xref.role_id IS 'Automatically generated key used to identify the uniqueness of a Role within the FAM Application'
;
COMMENT ON COLUMN app_fam.fam_user_role_xref.create_user IS 'The user or proxy account that created the record.'
;
COMMENT ON COLUMN app_fam.fam_user_role_xref.create_date IS 'The date and time the record was created.'
;
COMMENT ON COLUMN app_fam.fam_user_role_xref.update_user IS 'The user or proxy account that created or last updated the record. '
;
COMMENT ON COLUMN app_fam.fam_user_role_xref.update_date IS 'The date and time the record was created or last updated.'
;
COMMENT ON TABLE app_fam.fam_user_role_xref IS 'User Role Xref is a cross-reference object that allows for the identification of Roles assigned to a user, as well as the users that belong to a given Role'
;

-- 
-- INDEX: "Ref67" 
--

CREATE INDEX "Ref67" ON app_fam.fam_application(application_client_id)
;
-- 
-- INDEX: "Ref219" 
--

CREATE INDEX "Ref219" ON app_fam.fam_application_group_xref(group_id)
;
-- 
-- INDEX: "Ref720" 
--

CREATE INDEX "Ref720" ON app_fam.fam_application_group_xref(application_id)
;
-- 
-- INDEX: "Ref216" 
--

CREATE INDEX "Ref216" ON app_fam.fam_group(parent_group_id)
;
-- 
-- INDEX: "Ref425" 
--

CREATE INDEX "Ref425" ON app_fam.fam_group(client_number_id)
;
-- 
-- INDEX: "Ref1217" 
--

CREATE INDEX "Ref1217" ON app_fam.fam_group_role_xref(role_id)
;
-- 
-- INDEX: "Ref218" 
--

CREATE INDEX "Ref218" ON app_fam.fam_group_role_xref(group_id)
;
-- 
-- INDEX: "Ref722" 
--

CREATE INDEX "Ref722" ON app_fam.fam_role(application_id)
;
-- 
-- INDEX: "Ref1223" 
--

CREATE INDEX "Ref1223" ON app_fam.fam_role(parent_role_id)
;
-- 
-- INDEX: "Ref424" 
--

CREATE INDEX "Ref424" ON app_fam.fam_role(client_number_id)
;
-- 
-- INDEX: "Ref329" 
--

CREATE INDEX "Ref329" ON app_fam.fam_user_group_xref(user_id)
;
-- 
-- INDEX: "Ref230" 
--

CREATE INDEX "Ref230" ON app_fam.fam_user_group_xref(group_id)
;
-- 
-- INDEX: "Ref310" 
--

CREATE INDEX "Ref310" ON app_fam.fam_user_role_xref(user_id)
;
-- 
-- INDEX: "Ref1212" 
--

CREATE INDEX "Ref1212" ON app_fam.fam_user_role_xref(role_id)
;
-- 
-- TABLE: app_fam.fam_application 
--

ALTER TABLE app_fam.fam_application ADD 
    CONSTRAINT fam_app_pk PRIMARY KEY (application_id)
;

-- 
-- TABLE: app_fam.fam_application_client 
--

ALTER TABLE app_fam.fam_application_client ADD 
    CONSTRAINT fam_app_cli_pk PRIMARY KEY (application_client_id)
;

-- 
-- TABLE: app_fam.fam_application_group_xref 
--

ALTER TABLE app_fam.fam_application_group_xref ADD 
    CONSTRAINT fam_app_grp_xref PRIMARY KEY (application_id, group_id)
;

-- 
-- TABLE: app_fam.fam_forest_client 
--

ALTER TABLE app_fam.fam_forest_client ADD 
    CONSTRAINT fam_for_cli_pk PRIMARY KEY (client_number_id)
;

-- 
-- TABLE: app_fam.fam_group 
--

ALTER TABLE app_fam.fam_group ADD 
    CONSTRAINT fam_grp_pk PRIMARY KEY (group_id)
;

-- 
-- TABLE: app_fam.fam_group_role_xref 
--

ALTER TABLE app_fam.fam_group_role_xref ADD 
    CONSTRAINT fam_grp_rle_pk PRIMARY KEY (group_id, role_id)
;

-- 
-- TABLE: app_fam.fam_role 
--

ALTER TABLE app_fam.fam_role ADD 
    CONSTRAINT fam_rle_pk PRIMARY KEY (role_id)
;

-- 
-- TABLE: app_fam.fam_user 
--

ALTER TABLE app_fam.fam_user ADD 
    CONSTRAINT fam_usr_pk PRIMARY KEY (user_id)
;

-- 
-- TABLE: app_fam.fam_user_group_xref 
--

ALTER TABLE app_fam.fam_user_group_xref ADD 
    CONSTRAINT fam_usr_rle_pk_1 PRIMARY KEY (user_id, group_id)
;

-- 
-- TABLE: app_fam.fam_user_role_xref 
--

ALTER TABLE app_fam.fam_user_role_xref ADD 
    CONSTRAINT fam_usr_rle_pk PRIMARY KEY (user_id, role_id)
;

-- 
-- TABLE: app_fam.fam_application 
--

ALTER TABLE app_fam.fam_application ADD CONSTRAINT Reffam_application_client7 
    FOREIGN KEY (application_client_id)
    REFERENCES app_fam.fam_application_client(application_client_id)
;


-- 
-- TABLE: app_fam.fam_application_group_xref 
--

ALTER TABLE app_fam.fam_application_group_xref ADD CONSTRAINT Reffam_group19 
    FOREIGN KEY (group_id)
    REFERENCES app_fam.fam_group(group_id)
;

ALTER TABLE app_fam.fam_application_group_xref ADD CONSTRAINT Reffam_application20 
    FOREIGN KEY (application_id)
    REFERENCES app_fam.fam_application(application_id)
;


-- 
-- TABLE: app_fam.fam_group 
--

ALTER TABLE app_fam.fam_group ADD CONSTRAINT Reffam_group16 
    FOREIGN KEY (parent_group_id)
    REFERENCES app_fam.fam_group(group_id)
;

ALTER TABLE app_fam.fam_group ADD CONSTRAINT Reffam_forest_client25 
    FOREIGN KEY (client_number_id)
    REFERENCES app_fam.fam_forest_client(client_number_id)
;


-- 
-- TABLE: app_fam.fam_group_role_xref 
--

ALTER TABLE app_fam.fam_group_role_xref ADD CONSTRAINT Reffam_role17 
    FOREIGN KEY (role_id)
    REFERENCES app_fam.fam_role(role_id)
;

ALTER TABLE app_fam.fam_group_role_xref ADD CONSTRAINT Reffam_group18 
    FOREIGN KEY (group_id)
    REFERENCES app_fam.fam_group(group_id)
;


-- 
-- TABLE: app_fam.fam_role 
--

ALTER TABLE app_fam.fam_role ADD CONSTRAINT Reffam_application22 
    FOREIGN KEY (application_id)
    REFERENCES app_fam.fam_application(application_id)
;

ALTER TABLE app_fam.fam_role ADD CONSTRAINT Reffam_role23 
    FOREIGN KEY (parent_role_id)
    REFERENCES app_fam.fam_role(role_id)
;

ALTER TABLE app_fam.fam_role ADD CONSTRAINT Reffam_forest_client24 
    FOREIGN KEY (client_number_id)
    REFERENCES app_fam.fam_forest_client(client_number_id)
;


-- 
-- TABLE: app_fam.fam_user_group_xref 
--

ALTER TABLE app_fam.fam_user_group_xref ADD CONSTRAINT Reffam_user29 
    FOREIGN KEY (user_id)
    REFERENCES app_fam.fam_user(user_id)
;

ALTER TABLE app_fam.fam_user_group_xref ADD CONSTRAINT Reffam_group30 
    FOREIGN KEY (group_id)
    REFERENCES app_fam.fam_group(group_id)
;


-- 
-- TABLE: app_fam.fam_user_role_xref 
--

ALTER TABLE app_fam.fam_user_role_xref ADD CONSTRAINT Reffam_user10 
    FOREIGN KEY (user_id)
    REFERENCES app_fam.fam_user(user_id)
;

ALTER TABLE app_fam.fam_user_role_xref ADD CONSTRAINT Reffam_role12 
    FOREIGN KEY (role_id)
    REFERENCES app_fam.fam_role(role_id)
;


