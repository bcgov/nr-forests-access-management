"""post alembic migrations

Revision ID: V5
Revises: V4
Create Date: 2022-09-07 16:26:10.600110

"""
from alembic import op
import sqlalchemy as sa
import sqlmodel



# revision identifiers, used by Alembic.
revision = 'V5'
down_revision = 'V4'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('fam_application', 'update_user',
               existing_type=sa.VARCHAR(length=30),
               comment='The user or proxy account that created or last updated the record.',
               existing_comment='The user or proxy account that created or last updated the record. ',
               existing_nullable=True,
               schema='app_fam')
    op.create_table_comment(
        'fam_application',
        'An application is a digital product that fulfills a  specific user goal. It can be a front-end application, a back-end API, a combination of these, or something else entirely.',
        existing_comment='An application is a digital product that fulfills a specific user goal. It can be a front-end application, a back-end API, a combination of these, or something else entirely.',
        schema='app_fam'
    )
    op.alter_column('fam_application_client', 'application_client_id',
               existing_type=sa.BIGINT(),
               comment='Automatically generated key used to identify the uniqueness  of an OIDC as it corresponds to an identified client ',
               existing_comment='Automatically generated key used to identify the uniqueness of an OIDC as it corresponds to an identified client ',
               existing_nullable=False,
               autoincrement=True,
               existing_server_default=sa.Identity(always=True, start=1, increment=1, minvalue=1, maxvalue=9223372036854775807, cycle=False, cache=1),
               schema='app_fam')
    op.create_table_comment(
        'fam_group',
        'A group is a collection of roles. When a group is assigned to a user, the user indirectly assumes the privileges of all the roles encompassed by the group. Groups are used to defineprofiles in order to make it easier to manage common sets of roles for users. A group can contain roles from multiple applications in order to handle the case where users typically have a certain set of privileges across multiple applications.',
        existing_comment='A group is a collection of roles. When a group is assigned to a user, the user indirectly assumes the privileges of all the roles encompassed by the group. Groups are used to define profiles in order to make it easier to manage common sets of roles for users. A group can contain roles from multiple applications in order to handle the case where users typically have a certain set of privileges across multiple applications.',
        schema='app_fam'
    )
    op.alter_column('fam_user', 'update_user',
               existing_type=sa.VARCHAR(length=30),
               comment='The user or proxy account that created or last updated the record.',
               existing_comment='The user or proxy account that created or last updated the record. ',
               existing_nullable=True,
               schema='app_fam')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('fam_user', 'update_user',
               existing_type=sa.VARCHAR(length=30),
               comment='The user or proxy account that created or last updated the record. ',
               existing_comment='The user or proxy account that created or last updated the record.',
               existing_nullable=True,
               schema='app_fam')
    op.create_table_comment(
        'fam_group',
        'A group is a collection of roles. When a group is assigned to a user, the user indirectly assumes the privileges of all the roles encompassed by the group. Groups are used to define profiles in order to make it easier to manage common sets of roles for users. A group can contain roles from multiple applications in order to handle the case where users typically have a certain set of privileges across multiple applications.',
        existing_comment='A group is a collection of roles. When a group is assigned to a user, the user indirectly assumes the privileges of all the roles encompassed by the group. Groups are used to defineprofiles in order to make it easier to manage common sets of roles for users. A group can contain roles from multiple applications in order to handle the case where users typically have a certain set of privileges across multiple applications.',
        schema='app_fam'
    )
    op.alter_column('fam_application_client', 'application_client_id',
               existing_type=sa.BIGINT(),
               comment='Automatically generated key used to identify the uniqueness of an OIDC as it corresponds to an identified client ',
               existing_comment='Automatically generated key used to identify the uniqueness  of an OIDC as it corresponds to an identified client ',
               existing_nullable=False,
               autoincrement=True,
               existing_server_default=sa.Identity(always=True, start=1, increment=1, minvalue=1, maxvalue=9223372036854775807, cycle=False, cache=1),
               schema='app_fam')
    op.create_table_comment(
        'fam_application',
        'An application is a digital product that fulfills a specific user goal. It can be a front-end application, a back-end API, a combination of these, or something else entirely.',
        existing_comment='An application is a digital product that fulfills a  specific user goal. It can be a front-end application, a back-end API, a combination of these, or something else entirely.',
        schema='app_fam'
    )
    op.alter_column('fam_application', 'update_user',
               existing_type=sa.VARCHAR(length=30),
               comment='The user or proxy account that created or last updated the record. ',
               existing_comment='The user or proxy account that created or last updated the record.',
               existing_nullable=True,
               schema='app_fam')
    # ### end Alembic commands ###
