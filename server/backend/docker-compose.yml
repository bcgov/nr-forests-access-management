version: '3.8'
volumes:
  db:
    driver:
      local
services:
  db:
    container_name: db
    image: postgres:14.1-alpine
    env_file:
      - env-docker-compose.env
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      retries: 3
      start_period: 30s
      timeout: 5s
    volumes:
      - db:/var/lib/postgresql/data
    ports:
      - 5432:5432
    networks:
      - fam
  fam-api:
    container_name: fam-api
    depends_on:
      - db
    env_file:
      - env-docker-compose.env
    entrypoint:
      - bash
      - -c
      -  cd /usr/src && echo DB USER is $api_db_username &&
        export POSTGRES_DB=fam &&
        export POSTGRES_HOST=db &&
        pip install -r requirements.txt  -r requirements-dev.txt &&
        cd api &&
        alembic -x url=postgresql+psycopg2://$${POSTGRES_USER}:$${POSTGRES_PASSWORD}@$${POSTGRES_HOST}:$${POSTGRES_PORT}/$${POSTGRES_DB} upgrade head &&
        echo swapping $POSTGRES_USER for $api_db_username so api runs under the latter &&
        export POSTGRES_USER=$${api_db_username} &&
        export POSTGRES_PASSWORD=$${api_db_password} &&
        echo postgres user is $${POSTGRES_USER} should be - $${api_db_username} &&
        cd .. &&
        uvicorn api.app.main:app --reload --workers 1 --host 0.0.0.0 --port 8000
    volumes:
      - ./:/usr/src/
    ports:
      - 8000:8000
    image: python:3.8
    networks:
      - fam

networks:
  fam:
    driver: bridge
    attachable: true


