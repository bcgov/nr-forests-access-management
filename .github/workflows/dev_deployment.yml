name: DEPLOY Development Environment

on:
  workflow_dispatch:
  push:
    branches:
      - "main"

# When use GHA OIDC provider and for action to create the JWT, it is required to have the id-token: write permission
# permission can be added at job level or workflow level. Ref: https://github.com/aws-actions/configure-aws-credentials#OIDC
permissions:
  id-token: write # This is required for requesting the JWT
  contents: read # This is required for actions/checkout

jobs:
  aws-dev-deployment-server:
    uses: ./.github/workflows/reusable_terraform_server.yml
    with:
      environment_name: dev
      tf_subcommand: apply
      execute_flyway: true
    secrets:
      licenceplate: ${{ secrets.LICENCEPLATE}}
      dev_oidc_idir_idp_client_secret: "${{ secrets.DEV_OIDC_IDIR_IDP_CLIENT_SECRET }}"
      test_oidc_idir_idp_client_secret: "${{ secrets.TEST_OIDC_IDIR_IDP_CLIENT_SECRET }}"
      prod_oidc_idir_idp_client_secret: "${{ secrets.PROD_OIDC_IDIR_IDP_CLIENT_SECRET }}"
      dev_oidc_bceid_business_idp_client_secret: "${{ secrets.DEV_OIDC_BCEID_BUSINESS_IDP_CLIENT_SECRET }}"
      test_oidc_bceid_business_idp_client_secret: "${{ secrets.TEST_OIDC_BCEID_BUSINESS_IDP_CLIENT_SECRET }}"
      prod_oidc_bceid_business_idp_client_secret: "${{ secrets.PROD_OIDC_BCEID_BUSINESS_IDP_CLIENT_SECRET }}"
      forest_client_api_api_key_test: "${{ secrets.FOREST_CLIENT_API_API_KEY_TEST }}"
      dev_oidc_bcsc_idp_client_secret: "${{ secrets.DEV_OIDC_BCSC_IDP_CLIENT_SECRET }}"
      test_oidc_bcsc_idp_client_secret: "${{ secrets.TEST_OIDC_BCSC_IDP_CLIENT_SECRET }}"
      prod_oidc_bcsc_idp_client_secret: "${{ secrets.PROD_OIDC_BCSC_IDP_CLIENT_SECRET }}"
      idim_proxy_api_api_key: "${{ secrets.IDIM_PROXY_API_API_KEY }}"
      gc_notify_email_api_key: "${{ secrets.GC_NOTIFY_EMAIL_API_KEY }}"
      fam_update_user_info_api_key: "${{ secrets.FAM_UPDATE_USER_INFO_API_KEY }}"

  aws-dev-deployment-frontend:
    needs: aws-dev-deployment-server
    uses: ./.github/workflows/reusable_terraform_frontend.yml
    with:
      environment_name: dev
      tf_subcommand: apply
    secrets:
      licenceplate: ${{ secrets.LICENCEPLATE}}

  data-model-update:
    name: Generating Data Model
    uses: ./.github/workflows/reusable_data_model_gen.yml

