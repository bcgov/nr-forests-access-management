name: Run CI SONAR tests for Auth Function

on:
  push:
    branches:
      - "ci/649-test-coverage"

env:
  POSTGRES_USER: fam_proxy_api
  POSTGRES_PASSWORD: test
  POSTGRES_HOST: localhost
  POSTGRES_DB: fam
  POSTGRES_PORT: 5432

jobs:
  auth-function-ci:
    runs-on: ubuntu-latest

    steps:
      - name: checkout the repo and building the Backend
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up Python 3.8
        uses: actions/setup-python@v4
        with:
          python-version: 3.8

      - name: Run FAM API Tests
        working-directory: server/auth_function
        env:
          FC_API_TOKEN: ${{ secrets.FOREST_CLIENT_API_API_KEY }}
        run: |
          pip install -r requirements.txt -r requirements-dev.txt
          pytest --cov=. --cov-branch --cov-report=xml -v --md=report.md --emoji
          cat coverage.xml
          pip install coverage
          python -m coverage xml -i
          cat coverage.xml

      - name: Publish FAM API Tests
        working-directory: server/auth_function
        if: always()
        run: |
          ls
          sed -i 's/# Test Report/# FAM Auth Function Tests/' report.md
          sed -i '2i <details><summary>Click to expand!</summary>' report.md
          sed -i '$a</details>' report.md
          cat report.md >> $GITHUB_STEP_SUMMARY


      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        if: always()
        with:
          projectBaseDir: server/auth_function
          args: >
            -Dsonar.organization=bcgov-sonarcloud
            -Dsonar.projectKey=nr-forests-access-management_auth
            -Dsonar.python.coverage.reportPaths=coverage.xml
            -Dsonar.tests=/home/runner/work/nr-forests-access-management/nr-forests-access-management/server/auth_function/test/
            -Dsonar.verbose=false
            -Dsonar.python.version=3.8
            -Dsonar.sources=/home/runner/work/nr-forests-access-management/nr-forests-access-management/server/auth_function/


        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN_AUTH }}


          # -Dsonar.python.coverage.reportPath

