name: CI for Auth Function (Build and Test)

# on:
#   workflow_call:

on:
  push:
    #branches: [feat/84-configure-lambda]
    # testing action, think its running the version that exists in main
    branches: [feat/21-auth-lookup-function]

env:
  POSTGRES_DB: fam
  POSTGRES_USER: postgres
  POSTGRES_PASSWORD: postgres
  API_DB_USERNAME: fam_proxy_api
  API_DB_PASSWORD: fam_password

  # syntax to dereference  ${{ env.TF_VERSION }}

jobs:
  auth-function-ci:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_DB: ${{ env.POSTGRES_DB }}
          POSTGRES_USER: ${{ env.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ env.POSTGRES_PASSWORD }}
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: checkout the repo and building the Backend
        uses: actions/checkout@v2

      - name: run flyway on test database
        uses: joshuaavalon/flyway-action@v3.0.0
        with:
          url: jdbc:postgresql://postgres:5432/${{ env.POSTGRES_DB }}
          user: ${{ env.POSTGRES_USER }}
          password: ${{ env.POSTGRES_PASSWORD }}
          locations: server/flyway/sql
        env:
          FLYWAY_PLACEHOLDERS_API_DB_USERNAME: ${{ env.API_DB_USERNAME }}
          FLYWAY_PLACEHOLDERS_API_DB_PASSWORD: ${{ env.API_DB_PASSWORD }}

      - name: Auth function install python test dependencies
        working-directory: server/auth_function
        run: |
          pip install pytest pytest-md pytest-emoji
          pip install -r requirements.txt

      - name: Auth function run pytest
        uses: pavelzw/pytest-action@v2
        with:
          emoji: true
          verbose: true
          job-summary: true
          custom-arguments: 'server/auth_function'
        env:
          PG_HOST: localhost
          PG_PORT: 5432
          PG_DATABASE: ${{ env.POSTGRES_DB }}
          PG_USER: ${{ env.API_DB_USERNAME }}
          PG_PASSWORD: ${{ env.API_DB_PASSWORD }}

      - name: Auth function zip
        run: |
          mkdir auth_function_packaging
          rsync -r server/auth_function/* auth_function_packaging -F --exclude=requirements.txt --exclude=test --exclude=requirements-dev.txt
          pip install -t auth_function_packaging -r server/auth_function/requirements.txt -r server/auth_function/requirements-dev.txt
          cd auth_function_packaging
          zip -r9 ../infrastructure/server/fam_auth_function.zip .
          cd ..
          rm -rf auth_function_packaging

      - name: Auth function upload zip file artifact
        uses: actions/upload-artifact@v2
        with:
          name: fam-auth-function-zip
          path: ./infrastructure/server/fam_auth_function.zip
          if-no-files-found: error
