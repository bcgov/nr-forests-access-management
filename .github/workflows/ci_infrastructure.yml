name: Continuous Integration Infrastructure

on:
  workflow_dispatch:

  push:
    branches:
      - "main"
    paths:
      - "terraform/**"
      - "terraform-frontend/**"
      - "infrastructure/**"
      - ".github/workflows/reusable_terraform_server.yml"
      - ".github/workflows/pr_open_terraform_ci.yml"

  pull_request:
    branches:
      - "main"
    paths:
      - "terraform/**"
      - "terraform-frontend/**"
      - "infrastructure/**"
      - ".github/workflows/reusable_terraform_server.yml"
      - ".github/workflows/pr_open_terraform_ci.yml"

jobs:

  backend-terraform-plan:
    uses: ./.github/workflows/reusable_terraform_server.yml
    with:
      environment_name: dev
      tf_subcommand: plan
      execute_flyway: false
    secrets:
      licenceplate: ${{ secrets.LICENCEPLATE}}
      tfc_team_token: ${{ secrets.TFC_TEAM_TOKEN }}
      dev_oidc_idir_idp_client_secret: "${{ secrets.DEV_OIDC_IDIR_IDP_CLIENT_SECRET }}"
      test_oidc_idir_idp_client_secret: "${{ secrets.TEST_OIDC_IDIR_IDP_CLIENT_SECRET }}"
      prod_oidc_idir_idp_client_secret: "${{ secrets.PROD_OIDC_IDIR_IDP_CLIENT_SECRET }}"
      dev_oidc_bceid_business_idp_client_secret: "${{ secrets.DEV_OIDC_BCEID_BUSINESS_IDP_CLIENT_SECRET }}"
      test_oidc_bceid_business_idp_client_secret: "${{ secrets.TEST_OIDC_BCEID_BUSINESS_IDP_CLIENT_SECRET }}"
      prod_oidc_bceid_business_idp_client_secret: "${{ secrets.PROD_OIDC_BCEID_BUSINESS_IDP_CLIENT_SECRET }}"
      forest_client_api_api_key: "${{ secrets.FOREST_CLIENT_API_API_KEY }}"
      dev_oidc_bcsc_idp_client_secret: "${{ secrets.DEV_OIDC_BCSC_IDP_CLIENT_SECRET }}"
      test_oidc_bcsc_idp_client_secret: "${{ secrets.TEST_OIDC_BCSC_IDP_CLIENT_SECRET }}"
      prod_oidc_bcsc_idp_client_secret: "${{ secrets.PROD_OIDC_BCSC_IDP_CLIENT_SECRET }}"
      idim_proxy_api_api_key: "${{ secrets.IDIM_PROXY_API_API_KEY }}"


  frontend-terraform-plan:
    needs: backend-terraform-plan
    uses: ./.github/workflows/reusable_terraform_frontend.yml
    with:
      environment_name: dev
      tf_subcommand: plan
    secrets:
      licenceplate: ${{ secrets.LICENCEPLATE}}
      tfc_team_token: ${{ secrets.TFC_TEAM_TOKEN }}

  backend-terraform-plan-destroy:
    needs: frontend-terraform-plan
    uses: ./.github/workflows/reusable_terraform_server.yml
    with:
      environment_name: dev
      # This command can detect issues with the terraform destory: graph -verbose -draw-cycles -type=plan-destroy
      # Only need for the backend because we don't destroy the frontend.
      tf_subcommand: plan -destroy
      execute_flyway: false
    secrets:
      licenceplate: ${{ secrets.LICENCEPLATE}}
      tfc_team_token: ${{ secrets.TFC_TEAM_TOKEN }}
      dev_oidc_idir_idp_client_secret: "${{ secrets.DEV_OIDC_IDIR_IDP_CLIENT_SECRET }}"
      test_oidc_bceid_business_idp_client_secret: "${{ secrets.TEST_OIDC_IDIR_IDP_CLIENT_SECRET }}"
      prod_oidc_idir_idp_client_secret: "${{ secrets.PROD_OIDC_IDIR_IDP_CLIENT_SECRET }}"
      dev_oidc_bceid_business_idp_client_secret: "${{ secrets.DEV_OIDC_BCEID_BUSINESS_IDP_CLIENT_SECRET }}"
      test_oidc_idir_idp_client_secret: "${{ secrets.TEST_OIDC_BCEID_BUSINESS_IDP_CLIENT_SECRET }}"
      prod_oidc_bceid_business_idp_client_secret: "${{ secrets.PROD_OIDC_BCEID_BUSINESS_IDP_CLIENT_SECRET }}"
      forest_client_api_api_key: "${{ secrets.FOREST_CLIENT_API_API_KEY }}"
      dev_oidc_bcsc_idp_client_secret: "${{ secrets.DEV_OIDC_BCSC_IDP_CLIENT_SECRET }}"
      test_oidc_bcsc_idp_client_secret: "${{ secrets.TEST_OIDC_BCSC_IDP_CLIENT_SECRET }}"
      prod_oidc_bcsc_idp_client_secret: "${{ secrets.PROD_OIDC_BCSC_IDP_CLIENT_SECRET }}"
      idim_proxy_api_api_key: "${{ secrets.IDIM_PROXY_API_API_KEY }}"
