/* tslint:disable */
/* eslint-disable */
/**
 * Forest Access Management - FAM - API
 *  Forest Access Management API used by the Forest Access Management application to Define who has access to what apps, and what roles they will operate under  once access is granted. 
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: guy.lafleur@montreal.canadians.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import type { Configuration } from '../configuration';
import type { AxiosPromise, AxiosInstance, AxiosRequestConfig } from 'axios';
import globalAxios from 'axios';
// Some imports not used depending on template conditions
// @ts-ignore
import { DUMMY_BASE_URL, assertParamExists, setApiKeyToObject, setBasicAuthToObject, setBearerAuthToObject, setOAuthToObject, setSearchParams, serializeDataIfNeeded, toPathString, createRequestFunction } from '../common';
// @ts-ignore
import { BASE_PATH, COLLECTION_FORMATS, RequestArgs, BaseAPI, RequiredError } from '../base';
// @ts-ignore
import { FamForestClient } from '../model';
// @ts-ignore
import { HTTPValidationError } from '../model';
/**
 * FAMForestClientsApi - axios parameter creator
 * @export
 */
export const FAMForestClientsApiAxiosParamCreator = function (configuration?: Configuration) {
    return {
        /**
         * Forest Client(s) search (by defined query parameter(s)).  param: \'client_number=[query_value]\'        Note! Current Forest Client API limits it to exact search for a whole 8-digits number.  return: List of found FamForestClient. However, currently only 1 exact match returns.
         * @summary Search
         * @param {string} clientNumber 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        search: async (clientNumber: string, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'clientNumber' is not null or undefined
            assertParamExists('search', 'clientNumber', clientNumber)
            const localVarPath = `/forest_clients/search`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication 6jfveou69mgford233or30hmta required
            // oauth required
            await setOAuthToObject(localVarHeaderParameter, "6jfveou69mgford233or30hmta", [], configuration)

            if (clientNumber !== undefined) {
                localVarQueryParameter['client_number'] = clientNumber;
            }


    
            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
    }
};

/**
 * FAMForestClientsApi - functional programming interface
 * @export
 */
export const FAMForestClientsApiFp = function(configuration?: Configuration) {
    const localVarAxiosParamCreator = FAMForestClientsApiAxiosParamCreator(configuration)
    return {
        /**
         * Forest Client(s) search (by defined query parameter(s)).  param: \'client_number=[query_value]\'        Note! Current Forest Client API limits it to exact search for a whole 8-digits number.  return: List of found FamForestClient. However, currently only 1 exact match returns.
         * @summary Search
         * @param {string} clientNumber 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async search(clientNumber: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<FamForestClient>>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.search(clientNumber, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
    }
};

/**
 * FAMForestClientsApi - factory interface
 * @export
 */
export const FAMForestClientsApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {
    const localVarFp = FAMForestClientsApiFp(configuration)
    return {
        /**
         * Forest Client(s) search (by defined query parameter(s)).  param: \'client_number=[query_value]\'        Note! Current Forest Client API limits it to exact search for a whole 8-digits number.  return: List of found FamForestClient. However, currently only 1 exact match returns.
         * @summary Search
         * @param {string} clientNumber 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        search(clientNumber: string, options?: any): AxiosPromise<Array<FamForestClient>> {
            return localVarFp.search(clientNumber, options).then((request) => request(axios, basePath));
        },
    };
};

/**
 * FAMForestClientsApi - interface
 * @export
 * @interface FAMForestClientsApi
 */
export interface FAMForestClientsApiInterface {
    /**
     * Forest Client(s) search (by defined query parameter(s)).  param: \'client_number=[query_value]\'        Note! Current Forest Client API limits it to exact search for a whole 8-digits number.  return: List of found FamForestClient. However, currently only 1 exact match returns.
     * @summary Search
     * @param {string} clientNumber 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FAMForestClientsApiInterface
     */
    search(clientNumber: string, options?: AxiosRequestConfig): AxiosPromise<Array<FamForestClient>>;

}

/**
 * FAMForestClientsApi - object-oriented interface
 * @export
 * @class FAMForestClientsApi
 * @extends {BaseAPI}
 */
export class FAMForestClientsApi extends BaseAPI implements FAMForestClientsApiInterface {
    /**
     * Forest Client(s) search (by defined query parameter(s)).  param: \'client_number=[query_value]\'        Note! Current Forest Client API limits it to exact search for a whole 8-digits number.  return: List of found FamForestClient. However, currently only 1 exact match returns.
     * @summary Search
     * @param {string} clientNumber 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FAMForestClientsApi
     */
    public search(clientNumber: string, options?: AxiosRequestConfig) {
        return FAMForestClientsApiFp(this.configuration).search(clientNumber, options).then((request) => request(this.axios, this.basePath));
    }
}

