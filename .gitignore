# Local .terraform directories
**/.terraform/*

# .tfstate files
*.tfstate
*.tfstate.*

# Crash log files
crash.log

# Ignore any .tfvars files that are generated automatically for each Terraform run. Most
# .tfvars files are managed as part of configuration and so should be included in
# version control.
#
# example.tfvars

# Ignore override files as they are usually used to override resources locally and so
# are not checked in
override.tf
override.tf.json
*_override.tf
*_override.tf.json

# Include override files you do wish to add to version control using negated pattern
#
# !example_override.tf

# Include tfplan files to ignore the plan output of command: terraform plan -out=tfplan
# example: *tfplan*
server/backend.hcl
server/.terraform.lock.hcl
server/lambda/node_modules
out.json


*.db
.env
venv
venvdc
__pycache__
.coverage
.pytest_cache

junk*
fam_api/request.json
backend/database/fam_api-9.0.1/*
backend/database/flyway*
server/fam-api.zip
server/localtest.auto.tfvars
aurora/.terraform.lock.hcl
aurora/aurora.hcl
server/backend/database/flyway*
server/backend/api/alembic/versions-modified/*
server/backend/api/app/models/model-back.py
server/packagelambda.bash
server/my-deployment-package.zip
server/packaging/*