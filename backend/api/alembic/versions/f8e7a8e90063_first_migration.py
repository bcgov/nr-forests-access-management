"""first migration

Revision ID: f8e7a8e90063
Revises: 
Create Date: 2022-07-06 17:56:33.893459

"""
from alembic import op
import sqlalchemy as sa
import sqlmodel

from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'f8e7a8e90063'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('fam_application_client',
    sa.Column('application_client_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('cognito_client_id', sa.String(length=32), nullable=False),
    sa.Column('create_user', sa.String(length=30), nullable=False),
    sa.Column('create_date', postgresql.TIMESTAMP(precision=6), server_default=sa.text('CURRENT_DATE'), nullable=False),
    sa.Column('update_user', sa.String(length=30), nullable=False),
    sa.Column('update_date', postgresql.TIMESTAMP(precision=6), server_default=sa.text('CURRENT_DATE'), nullable=True),
    sa.PrimaryKeyConstraint('application_client_id')
    )
    op.create_table('fam_forest_client',
    sa.Column('client_number_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('client_name', sa.String(length=100), nullable=False),
    sa.Column('create_user', sa.String(length=30), nullable=False),
    sa.Column('create_date', postgresql.TIMESTAMP(precision=6), server_default=sa.text('CURRENT_DATE'), nullable=False),
    sa.Column('update_user', sa.String(length=30), nullable=False),
    sa.Column('update_date', postgresql.TIMESTAMP(precision=6), server_default=sa.text('CURRENT_DATE'), nullable=True),
    sa.PrimaryKeyConstraint('client_number_id')
    )
    op.create_table('fam_user',
    sa.Column('user_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_type', sa.String(length=1), nullable=False),
    sa.Column('cognito_user_id', sa.String(length=32), nullable=True),
    sa.Column('user_name', sa.String(length=100), nullable=False),
    sa.Column('user_guid', sa.String(length=32), nullable=False),
    sa.Column('create_user', sa.String(length=30), nullable=False),
    sa.Column('create_date', postgresql.TIMESTAMP(precision=6), server_default=sa.text('CURRENT_DATE'), nullable=False),
    sa.Column('update_user', sa.String(length=30), nullable=False),
    sa.Column('update_date', postgresql.TIMESTAMP(precision=6), server_default=sa.text('CURRENT_DATE'), nullable=True),
    sa.PrimaryKeyConstraint('user_id'),
    sa.UniqueConstraint('user_guid')
    )
    op.create_table('fam_application',
    sa.Column('application_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('application_name', sa.String(length=100), nullable=False),
    sa.Column('applicationdescription', sa.String(length=200), nullable=False),
    sa.Column('application_client_id', sa.Integer(), nullable=True),
    sa.Column('create_user', sa.String(length=30), nullable=False),
    sa.Column('create_date', postgresql.TIMESTAMP(precision=6), server_default=sa.text('CURRENT_DATE'), nullable=False),
    sa.Column('update_user', sa.String(length=30), nullable=False),
    sa.Column('update_date', postgresql.TIMESTAMP(precision=6), server_default=sa.text('CURRENT_DATE'), nullable=True),
    sa.ForeignKeyConstraint(['application_client_id'], ['fam_application_client.application_client_id'], ),
    sa.PrimaryKeyConstraint('application_id')
    )
    op.create_table('fam_group',
    sa.Column('group_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('purpose', sa.String(length=200), nullable=False),
    sa.Column('parent_group_id', sa.Integer(), nullable=True),
    sa.Column('client_number_id', sa.Integer(), nullable=True),
    sa.Column('create_user', sa.String(length=30), nullable=False),
    sa.Column('create_date', postgresql.TIMESTAMP(precision=6), server_default=sa.text('CURRENT_DATE'), nullable=False),
    sa.Column('update_user', sa.String(length=30), nullable=False),
    sa.Column('update_date', postgresql.TIMESTAMP(precision=6), server_default=sa.text('CURRENT_DATE'), nullable=True),
    sa.ForeignKeyConstraint(['client_number_id'], ['fam_forest_client.client_number_id'], ),
    sa.ForeignKeyConstraint(['parent_group_id'], ['fam_group.group_id'], ),
    sa.PrimaryKeyConstraint('group_id')
    )
    op.create_table('fam_application_group_xref',
    sa.Column('group_id', sa.Integer(), nullable=False),
    sa.Column('application_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['application_id'], ['fam_application.application_id'], ),
    sa.ForeignKeyConstraint(['group_id'], ['fam_group.group_id'], ),
    sa.PrimaryKeyConstraint('group_id', 'application_id')
    )
    op.create_table('fam_role',
    sa.Column('role_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('role_name', sa.String(length=100), nullable=False),
    sa.Column('role_purpose', sa.String(length=200), nullable=False),
    sa.Column('parent_role_id', sa.Integer(), nullable=True),
    sa.Column('application_id', sa.Integer(), nullable=False),
    sa.Column('client_number_id', sa.Integer(), nullable=True),
    sa.Column('create_user', sa.String(length=30), nullable=False),
    sa.Column('create_date', postgresql.TIMESTAMP(precision=6), server_default=sa.text('CURRENT_DATE'), nullable=False),
    sa.Column('update_user', sa.String(length=30), nullable=False),
    sa.Column('update_date', postgresql.TIMESTAMP(precision=6), server_default=sa.text('CURRENT_DATE'), nullable=True),
    sa.ForeignKeyConstraint(['application_id'], ['fam_application.application_id'], ),
    sa.ForeignKeyConstraint(['client_number_id'], ['fam_forest_client.client_number_id'], ),
    sa.ForeignKeyConstraint(['parent_role_id'], ['fam_role.role_id'], ),
    sa.PrimaryKeyConstraint('role_id')
    )
    op.create_table('fam_user_group_xref',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('group_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['group_id'], ['fam_group.group_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['fam_user.user_id'], ),
    sa.PrimaryKeyConstraint('user_id', 'group_id')
    )
    op.create_table('fam_group_role_xref',
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.Column('group_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['group_id'], ['fam_group.group_id'], ),
    sa.ForeignKeyConstraint(['role_id'], ['fam_role.role_id'], ),
    sa.PrimaryKeyConstraint('role_id', 'group_id')
    )
    op.create_table('fam_user_role_xref',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['role_id'], ['fam_role.role_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['fam_user.user_id'], ),
    sa.PrimaryKeyConstraint('user_id', 'role_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('fam_user_role_xref')
    op.drop_table('fam_group_role_xref')
    op.drop_table('fam_user_group_xref')
    op.drop_table('fam_role')
    op.drop_table('fam_application_group_xref')
    op.drop_table('fam_group')
    op.drop_table('fam_application')
    op.drop_table('fam_user')
    op.drop_table('fam_forest_client')
    op.drop_table('fam_application_client')
    # ### end Alembic commands ###
